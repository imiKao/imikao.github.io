[
  
  {
    "title": "真正的「需求 」",
    "url": "/posts/real-requirement/",
    "categories": "READING",
    "tags": "books",
    "date": "2022-09-03 00:00:00 +0800",
    





    "snippet": "  某天經過誠品，剛好一眼就看到這本名叫《放棄減肥》的書，書名很聳動，卻不可否認的吸人眼球。於是就買下來，直到這幾天把它讀完。在《放棄減肥》中，提到了自然而然的生活方式，也提到了身體自我調適，這中間最重要的是給身體一個權利讓它自我發現需求，才能進行自我調適。這與我近期一直在思考的另一件事有很密切的相關。我的工作很多時候需要做可視化介面讓使用者使用，這其中需要花很多時間了解使用者的「需求」，沒錯，「需求」就是我近期一直在思考的事情。就像使用者對於不同的需求會有不同的視覺化介面呈現，身體也會對自己的需求有所了解，這篇我不多談胖子與瘦子相關的話題，而是進一步推展到「需求」對我的影響。我的需求時常被自己忽略前陣子發生了一些事，使得我對自己展開了很深刻的思考，很多時候我把視角放在第三方的角度來看自己，發現了許多過去沒發現的事情。其中一項自我發現的事情就是，我似乎忽略了對於我自己的腦袋與身體真正想要的東西，且除了忽視自己身體飽了或餓了、渴了或想睡了，我也一直壓抑住自己真正的想法。這件事似乎是從小就開始，小時候我為了當個標準的好學生，在許多事情上面都盡量的表現的盡善盡美，然而「完美」這件事當漸漸長大後遇到許多事情是無法繼續實現的，很多時候事情並不是一定能達到百分之百的境界，但以我那「僵化」的腦袋自然是不會意識到這件事，我轉而針對自己能掌握的部分不斷要求，儘管很多事情仍然無法達到標準。我忽略了自己當下的聲音，拿睡覺這件事來說，因為我過去崇尚早睡早起，認為早睡早起的人才是有規律、有責任的人，且對身體健康有幫助，我不斷的要求自己一定要在晚上11點前睡，早上6點起床，以前還能夠維持，但當研究所乃至於出社會以後，各種事情的接踵而來，導致我無法有個好的睡眠，儘管如此，我還是想辦法一定要在11點或最晚12點要睡，早上起不來也會多訂幾個鬧鐘讓自己起床，我不斷的讓自己保持在所謂的「規律」的生活，這樣做的結果就是，因為晚上睡不著，我又強迫自己早上一定要起床，但長期睡眠不足且未針對真正困擾著我的事情做改善，惡性循環下，我不斷產生一些小毛病，包括過敏、慢性蕁麻疹以及頻繁的小感冒，甚至我認為新陳代謝下降導致肥胖也與此有關，總之，我所謂「規律的生活」並沒有讓我自己有更好的生活與更健康的身體，反而有負面的效果。除此之外，我也不斷做著不符合我的「規則」的生活方式，然後因為無法符合所以自我責怪，然後越責怪越會在達到臨界點之後去做我完全不想做的事情。例如吃東西，我總是要求自己去吃健康、原型的食物，但越要求自己，越容易去吃我完全不想吃的炸雞、滷味等不健康的食物。觀察自己的需求記得看過印度哲學家克里希那穆提曾經提到「觀察自己」這件事，與認識或找尋自己不同，觀察代表從第三方來觀看自己，而且觀察自己還包含一個重點：「不去對自己的行為做評論」。這種感覺跟冥想有種異曲同工的感覺，就是內視自己，然後靜靜的去內視，不做其他聯想。或許在其他地方也是一樣，如果我想真正的瞭解自己頭腦在想什麼？自己的身體當下需要什麼？我就需要觀察自己，很客觀的了解我的需求到底是什麼，如此我才能達到「自然而然」的目的。"
  },
  
  {
    "title": "如何定義機器學習的問題",
    "url": "/posts/how-to-define-problem/",
    "categories": "DATA_SCIENCE",
    "tags": "machine_learning",
    "date": "2022-08-02 00:00:00 +0800",
    





    "snippet": "  初學者應該聚焦的第一個就是「問題」，日常生活中我們可以很清楚地發現有一些痛點是我們無法使用既有的人為經驗或比較簡單的方法論來解決，此時就非常需要機器學習的幫助，但在使用機器學習的幫助之前，我們應該如何具體定義機器學習的問題呢？本篇是我在閱讀“How to define your machine learning problem”一文後的思考與心得記錄。在我的工作經驗當中，幾乎每個專案都必然有一個初始的目標，而這些目標背後都隱藏一到多個待解決的問題，差異只在專案成員是否在一開始認真剖析這個問題。而很弔詭的是，許多時候在一開始人們（包括我）似乎都知道問題點在哪，但隨著專案的進行，許多細部項目的展開，很容易在一段時間之後走偏，逐漸遠離一開始真正的問題點。我想並非是大家忘記了，而是在一開始沒有一個很具體的去定義與剖析問題點是什麼？值不值得我們去解決？需要花多少資源去解決？當大家幾乎都是將全部精力花在各種子任務時，心中原本認定的這個目標與問題點逐漸被模糊掉了。我想或許關鍵點在於一開始具體的定義問題點吧！本文主要目的在於記錄下我閱讀“How to define your machine learning problem”後的思考與心得紀錄。問題定義的框架設計如果定義問題需要一個方法論的話，那麼應該是要有一種邏輯性的方式來進行，或許有千百種有用的問題定義方式，或許也有根據不同問題而有不同的動態定義方式，但不管如何，先從最簡單、最容易理解的框架開始進行。我捫心自問，似乎在過去我針對問題點的理解總會在非常快速的敘述完它之後直接進到如何解決它，這樣子幾乎就跳過了明確定義問題的步驟了，但如果這個問題其實真正的痛點沒有被我抓出來呢？或是根本不需要被解決呢？或是以當前我們的能力是無法解決而需要更多的資料才有機會呢？問題定義的框架設計主要有3個步驟：  STEP1. 問題點是什麼？  STEP2. 為何這個問題點需要被解決?  STEP3. 我們如何解決這個問題？以下簡述並記錄我的想法。問題點是什麼？這個步驟就是具體的定義問題點，那如何比較有邏輯的進行呢？白話般的敘述就像我們遇到問題時都會跟朋友抱怨一樣，我們會很白話的敘述出我們的問題點。讓我先代入一個情境，例如我現在是一個電商老闆，我常常需要花很多廣告費用在所有的客戶上面，但效果可能不佳，因為我想要把比較多的廣告資源放在比較可能會回購的客戶身上。那麼這個白話的敘述可能會是：「我需要有人能告訴我哪些客戶是會再回購的？」，這句話基本上已經代表我們的問題點了，因為它背後隱藏的是我們需花比較多的成本來打廣告給所有的客戶這個痛點。將白話敘述結構化接下來要做的就是把這句話結構化，結構化的好處是我們可以將敘述轉化為機器學習的操作流程。結構化的方式主要可以拆成3個，包括任務(T)、經驗(E)與表現指標(P)。  任務（Ｔ）：做一個預測的分類器來預設哪些新客戶是會回購的？  經驗（Ｅ）：過去哪些用戶是會回購的？哪些用戶只購買一次？  表現指標（Ｐ）：這個預測的分類器的準確度結構化問題點可以讓我們更快的去符合機器學習的架構，兩者的結合可以更通順的執行接下來的步驟，但在此之前，我們仍然還有一些事情需要去思考：這個問題真的需要被解決嗎？為何這個問題需要被解決？一個專案或一件事情的開始其背後都有運行的觸發點，這與痛點不同，痛點是既有問題的存在，但觸發點則表示這件事的改變時機是否到達。舉個例來說，頁岩油是21世紀新的油礦資源，但頁岩油並非是21世紀以後才知道有這個東西，事實上頁岩因為質地較為堅硬，過去採油多在頁岩層間較為鬆軟的岩層中採油，大家也知道頁岩內部也有石油的存在，但卻因技術限制而無法採集。這邊「頁岩油」無法被採集是個痛點，但是採頁岩油的觸發點需等到技術被克服後才能進行，否則採集的成本極為高昂，甚至產生零效益。那麼在思考機器學習的問題點是否被解決時又該考慮哪些觸發點呢？動機這邊提的動機指的是解決的動機，舉個例來說，今天我們處理這個問題的動機主要是為了練習的話，我們後續的動作就會放在去嘗試不同的演算法與參數；而如果我們的動機是要盡快上線的話，就需要設計出最快能實現的prototype，然後只在其基礎之上進行優化。解決方案的效益如同前面的頁岩油的例子，當今天有新的採集技術被設計出來後，我們就必須考慮這個技術用在採集頁岩油上面的效益是如何？思考機器學習的問題時，也必須考量這個問題點的現況以及被改善之後的效益比較，有時候也不光是金錢，有時候這件事的進行也會帶來許多意義，就像蒸汽機被發明出來後，儘管效率還不是很好、成本也相對較高，但卻直接幹翻過去農業時代那些低效率的方式，開啟了人類的新文明。解決方案如何使用一個專案的進行不僅包括設計、開發、驗證以及維護階段，解決方案在使用上所聚焦的點在這個專案上的不同部分也會有所不同。專案報告是一件我認為非常有意義的事，不光是用來應付投資者或老闆的需求，而是可以呈現出當前這個專案不同階段對於解決方案的使用方式。我以專案報告呈現不同階段如何使用解決方案來舉個例，今天如果是設計階段，當我在簡報上就會聚焦在設計的架構上面，而架構來自於方向，如果方向錯誤，也代表著方向需要被討論與修正，這件事情不可以到了維修階段才被討論，否則這個專案可以說是很失敗。而如果到了開發階段，基本上架構都已定案，此時開發階段的報告就必須要呈現你用了哪些方法進行開發；而到了驗證階段，報告就必須就不同的驗證指標比較來確認是否需要修改或優化；當然，在後續正式上線後的維修階段，定期的報告也可以呈現此階段的穩定性如何，是否有需要更版的需求。我們如何解決這個問題？在這個階段，我們必須要很具體的問自己，甚至列出所有細節來幫助執行，像是哪些數據是我需要去收集的？Prototype的設計草圖？實驗步驟如何進行？是否還有哪些需要的數據是現在沒有的？沒有的數據可以用什麼方法去取得？而更具體的細節也包括哪些數據存在哪些資料庫？這些數據分別是什麼格式？資料庫Table之間的關聯性？結轉方式要用現成工具或程式轉API？包括數據細節與執行流程，也包括反饋機制與風險評估等，這個階段已經是很具體的內容，與真正執行只差在還沒有真正去「做」而已。"
  },
  
  {
    "title": "摒除自我限制的信念",
    "url": "/posts/remove-self-limitation/",
    "categories": "READING",
    "tags": "books",
    "date": "2022-07-18 00:00:00 +0800",
    





    "snippet": "  在立志成為一位長期主義者的同時，我發現了一件很難發現但卻影響深遠的事情，它是一個念頭，一個會自我拒絕的念頭，這個念頭用比較正式的說法就是「自我限制的信念」(Limiting-Beliefs)。本文參考《性格修正：如何突破你的原生性格》一書與《Dissolving limiting beliefs》這篇文章所進行自我限制的心得與發想。自我限制來自於曾經的「傷痛」說是傷痛或許有些過頭，事實上可能在別人看來，你發生過的事只是個「小事」，然而就是這種小事在經歷長久時間的積累，成為了我們真正的「傷痛」。隨著年紀越來越大，我發現包括我在內的很多成人，在面對自己的父輩時，都還是會有一種小孩看大人的感覺。而這種情況如果發生在經歷過父母不可動搖的權威教育下長大的人，會發展出另一種現象：對父母唯唯諾諾或不敢抵抗。說好聽一點是孝順，世俗一點就是所謂的媽寶。當然媽寶在我的定義上面不僅僅只是聽父母的話，更重要的是沒有主見或容易被左右，進一步來說是不敢承擔責任。這種現象其實很多，也不完全發生在所有事情上，在許多事情上也很難區分媽寶與孝順，但我這裡不談這個，我要談的是自我限制的原因。上述的媽寶只是用來舉例一個人因為某些原因，在許多事情上擁有了從小被定義好的「認知框架」，當成長過程中一旦違反了已經建立好的認知框架，例如遭遇挫折或失敗，就會開始產生負面情緒。有一種鼓勵恢復傷痛的話是「不要在意它吧！隨著時間一切都會沒事的」，這種方式或許有效，但我認為只是加速自我限制的信念產生而已。什麼意思呢？我們遭遇的事情真的能忘記嗎？別傻了，又不是失智，我們故意不去理會它，只是把它藏起來而已。就像食物一樣，如果我們不去理它，把它放在某一個角落一段時間後⋯⋯「是會發霉的！」當我們再次遇到相同的事情時，我們會刻意不去理會它，甚至逃避它，然後⋯⋯然後就沒有然後了。因為我們再也不會去接觸它，我們再也無法克服它，無法從中學習，無法從中成長。而就像不斷發霉的自我限制信念會不斷長大，「這件事太難，我做不到」、「萬一又失敗了會很痛苦」、「假設成功也只是僥倖」⋯⋯。不要說這種想法太負面，它真真正正的存在於很多事情中。在一百個人前面上台演講、完成全馬、跟外國人聊天，甚至是一個人環島⋯⋯，有很多我們會抗拒的事情，自我限制的想法都會在我們剛萌發夢想的同時間衝出來拒絕我們，甚至我們都沒發現它出來，因為它是潛意識的，況且如果沒有特別追溯的話，也是很難找到那個以前造成我們「傷痛」的原因的。面對自我限制的信念如何做？很簡單，面對它，行動它。當然不可能這麼簡單，因為在行動之前我們就又化身成理由伯了，各種理由、藉口就把我們擋下來。那麼到底該怎麼做？在《性格修正：如何突破你的原生性格》一書中有詳細的說明，我這邊簡單介紹一下我在初步實施與思考後覺得有效的方式。面對自我限制的藉口回想一下自己在做任何偉大的「夢想」或決定時，腦中跑出哪些理由？以我自己為例，我在轉職進入機器學習這一塊時，直到目前為止，都很少進入演算法這一塊，我多半都在資料層面打轉，做一些敘述分析、統計分析以及視覺化，雖然在目前的工作上綽綽有餘，但如果要真正進入到資料科學的另一塊領域，我多半給了自己很多限制。這邊借用Machine Learning Mastery這個Blog的一篇文章，剛好介紹了許多想踏入機器學習領域卻又止步不前的一些原因，多半也是與自我限制有關。「不是資料科學本科系畢業」、「數學或統計還不夠精通」、「程式語言還不夠強」⋯⋯等等原因都是我給自己的藉口，覺得這些還不夠厲害的話，還無法踏入下一步。正是這些自我限制的信念影響了我，這與我自我認知我是一位「半路出家」的人有關，過去的「傷痛」影響了我現在的成長。根據Machine Learning Mastery這篇文章的說明，我根本不用理會這些，要使用Top-Down的做法去行動，而不是要把所有基礎都練好才能進入下一步，這樣不僅緩慢，而且容易消磨熱情。因為面對這件事就是要把它擺到桌面上來看，最好用紙筆寫下來，再來就是去思考當初那個自我限制的想法是正確的嗎？我們要「挑戰」這個想法。而當我發現原來很多人在這個領域都不是本科系畢業的，也不一定要很強的數學背景。挑戰成功！這個想法被我打破，於是再也不用被它限制住了。從潛意識改變想法潛意識是很難有粗暴的方式去改變它的，它容易躲藏、迷幻，更甚者它悄悄的從其他方面影響我們，所以有效的方式就是從「目標」出發。《性格修正：如何突破你的原生性格》一書中提到性格是表面的，我們之所以難以改變性格是因為它有更深層的東西影響著它，所以唯一的方式就是用目標來反向驅動它。我們不用受限於自己是什麼性格、有什麼資源或缺失，可以直接從目標來反推我們可以變成什麼樣的人，這就是「成長」，也同時間會影響我們的潛意識。而如果在沒有比較具體的目標之前如何去影響潛意識時該怎麼辦？從「刻意」設定一些生活的目標來進行，例如斷食，斷食是一件需要刻意卻有其他好處的事情，它需要我們設定一個小目標，例如一週找幾天進行幾小時的斷食，不太需要長期的意志力就可達成，但效果卻很明顯，包括帶來更清晰的頭腦、更健康的身體等。另一件事是刻意去培養目標能夠帶給我們的成就感，我也稱為「更具體的想像力」，那就是慈善，慈善可以有很多方式，不見得只能捐錢，我比較懶，我只會小額定期捐款，但我選擇了能夠有具體回饋的方式，包含認養兒童，以及定期捐贈水果等方式。現在有很多慈善機構的方式不單單只是定期定額捐錢而已，而是會邀請做志工或進行實地探訪陪伴等方式，也會使用捐蔬果或捐重症兒童上的課程堂數的方式來進行，很有意義也有成就感。小行動的目標模擬可以帶來行動帶給我們的好處，同時不會引起太多其他自我限制帶來的理由，是有幫助的。突破自我限制，然後呢？這是個好問題，想像力、好奇心、使命感⋯⋯，或許這些都不斷迫使我們有著更多想完成的目標，再藉由目標反向成就我們自己。"
  },
  
  {
    "title": "機器學習中的不同群體",
    "url": "/posts/ten-group-in-ml/",
    "categories": "DATA_SCIENCE",
    "tags": "machine_learning",
    "date": "2022-05-20 00:00:00 +0800",
    





    "snippet": "  我一直以為機器學習領域多是資料科學家、資料分析師或演算法工程師等等的職位而已，當然也是我眼光比較狹隘，事實上在這個領域還有許多不同的群體，在“Find your machine learning tribe”一文中也介紹有10種機器學習領域中的群體，本篇主要針對其中幾個我比較有興趣的群體進行介紹與記錄下閱讀後“Find your machine learning tribe”的心得。一直以來我都習慣以資料分析相關的工作作為機器學習入門的敲門磚，因為我一直存在著狹隘的認知，認為只有數據分析才是機器學習這個領域的重點，殊不知其實還有許許多多不同的群體都屬於這個領域並做著不同的貢獻。其實想想也是，機器學習本身就是一門綜合性、跨學科的領域，應運而生的應該會在這其中有許許多多的面向是需要人們去進行研究，像是演算法模型就需要對數學有深厚底子的專家進行研究，數據解讀就更不用說了，是數據分析師最重要的工作。那麼究竟有哪些其他我忽略的群體呢？而這些群體又有哪些是我有機會可以進入並貢獻的呢？機器學習10大群體這邊稍微列出機器學習領域中的10大群體供參考：  對於商業智慧有極大需求的商務人士  負責大型商業專案的經理人  機器學習本科研究生  針對特定領域想要產生實務影響的研究學者  專門研究建模的研究學者  專精實現演算法的程序員  以系統化方式建構預測模型的工程開發人員  致力於發展更智慧化軟硬體的工程人員  找尋更好的商業問題解決方案的資料科學家  專精於數據解讀的數據分析師鑑於有些領域的群體我不是很了解，所以翻譯可能不到位，後續如果我有更進一步的了解再做修正。事實上光看這10大群體還是可以看出一些端倪，可以說這其中有部分群體本身是有特定專業的，像是商務人士、研究學者、工程師或程序員，意思是這些領域的人員可以依照自己本身的專精來主要聚焦，並於自己本身的優勢與出發點來進行重點學習，當然後面的應用也是如此。由此可見如果走錯群體，學習成本可能會非常的大，要謹慎。本篇主要會針對我比較理解與感興趣的群體（如上勾選）來說明，並記錄下我的一些心得。以系統化方式建構預測模型的工程開發人員顧名思義，這個群體的專家是需要非常強的架構設計能力，因為需要以系統化的方式來建構出一套很強的預測模型，並可以隨著實務上的資料變化而產生自適應來做資料預測。建構一個獨立的模型並不需要很強的Coding能力，也不需要專精於模型本身演算法的設計，但需要很「實務面」上的架構設計，最主要就是建構出來的東西可以直接落地來應付接下來變化多端的數據進來。雖然我對這個群體有一些基礎的了解，但是鑑於我接觸的人還不夠多，至今還未親身接觸到較全面的工程師，多半可以建構出比較簡易的模型來做像影像辨識或趨勢分析的人。但這個群體由於非常重實務，且需要對產業面有很多了解，其實是蠻適合作為像我一樣在工廠體系待磨練過一段時間的人。數據分析師不得不說我現在做的工作比較近似於數據分析師的工作，需要從一堆髒亂的數據中進行處理與可視化解讀資料，基本上就是利用有限的方法論來完成最基礎的需求，雖然如此，但數據本身的處理與解讀我認為是需要花一些時間去培養的，對數據有沒有感覺是一件很重要的事。而數據分析師的工作也可以從最簡單的Excel報表整理或做簡單的A/B Test，到比較進階的敘述統計分析，也需要簡單的資料庫知識與SQL搜尋。就我的經驗來說，這些已經能夠幫助大部分像工廠體系的主管的需求了，其效益會在將基層的現況以數據的方式進行一個比較透明化的整理呈現給決策者看，幫助決策者可以有一個更全面的了解來思考下一步該怎麼做。這也是我目前觀察台灣大部分電子業或傳產業在還未完全進入數據智慧化之前能夠有很大助益的一個職位。資料科學家曾經被譽為可能是「21世紀最性感工作」的資料科學家，是數據領域最被看好的職位，因為這個專業是一個對於數據有比較全面的整合能力，且能夠提供出對於商業智慧（Business Intelligence）有更好的解決方案。換言之，這是一個連結「數據」層面與「實務」層面非常重要的連接橋樑。為何我會認為這非常的重要呢？在我的觀察，許多的產業，尤其是比較基層或傳統產業，對於「數據」是非常沒有感覺的，他們更相信「經驗」，這是為什麼呢？我的認知如下：其一是因為並沒有系統幫助他們整理出數據，有許多產業有很多的「老師傅」，這些老師傅幾乎都是通過很長期的試錯累積來彙整出很系統化的經驗模式，而這些經驗模式可以幫助他們非常快速的面對當前的問題，也就是在效率驅使之下，經驗法則能夠以人為的方式更快的解決問題。其二是即使他們有紀錄數據，數據的保存性、人員對數據的不重視性以及對於缺乏數據統整的認知性，也會導致這種結果。數據的保存如果多半是以紙筆記錄，就存在著格式設計的問題，也存在著不同人有不同紀錄的方式差異，加上如果缺乏後續將不同紙本做統整，保存的完整度就會下降。而人員對數據的不重視並不是他們刻意為之，除了經驗法則的效率優勢以外，人們對於當下所記錄的Log除了做經驗判斷外，其實在其他方面很沒有感覺，像是以敘述統計來說，人們最多只會對於曲線趨勢圖有感覺以外，什麼中位數、四分位數或甚至移動平均數是沒有任何概念的，因為這些概念是需要頭腦再轉一層來思考的，所以數據分析師最重要的就是解讀這些數據所代表的意義。缺乏對數據統整的認知性則是因為沒有系統來幫助人們進行手邊雜亂的資料的統整，也沒有對資料的統計，因為沒有所以本來就不會有認知。這部分也是現在很多企業需要做數位轉型的一環，也就是數據系統的建立，而且除了像工廠或一般企業傳統的MES或ERP以外，數據孤島的整合更是非常重要，否則就會變成數據各自為政、各自解讀。雖然前面這個問題似乎在數據分析師就可以解決一大半，但因為這邊說的是整合這件事，數據分析師某種程度也算是比較「菜」的資料科學家，但要有資料科學家的需求，就必須先把前面這些事先完成，等於將數據層面的機制「數據系統」建構完成，那麼接下來與實務端的橋樑才可以開始連結。資料科學家需要對數據流（data flows）有很全面的理解，也需要對比較前沿的技術做深刻的了解並應用，規劃出針對問題做整體的解決方案，這過程可能需要不斷反覆的思考、與人溝通或錯誤反饋修正，並不局限於單純的預測模型，也可能把一些非結構化的數據給納入進行分析。通常資料科學家不需要是當下產業的專業人員，而是需要以數據領域為主軸，建構好與目標問題的對象之間的橋樑，通過與對象不斷的溝通與自身對於使用機器學習的方法論的理解來縮小雙方的差異，其實也是蠻適合像我這種半路出家但對數據有興趣的人當作目標來追尋。"
  },
  
  {
    "title": "初學機器學習應該聚焦在哪？",
    "url": "/posts/start-learn-ml-focus-what/",
    "categories": "DATA_SCIENCE",
    "tags": "machine_learning",
    "date": "2022-04-28 00:00:00 +0800",
    





    "snippet": "  在學習機器學習的旅程中會發現這個領域之大，幾乎難以全部駕馭，但對於一位初學者來說應該聚焦（focus）在哪呢？本文主要以閱讀“How to think about machine learning”後的思考來記錄下我系統性學習機器學習的心得，重新的明確定位學習機器學習的方向。前言先說結論，初學者應該明確的關注在「問題」與「解決方法」。事實上我在使用Top-Down思維學習機器學習一文中提到，我的認知機器學習本質上是一門「解決問題」的專業，那麼就很好的理解“How to think about machine learning”為何說明初學者就應該聚焦在「問題」與「解決方法」上。機器學習的「問題」機器學習的問題主要可以敘述為：  Find a model or procedure that makes best use of historical data comprised of inputs and outputs in order to skillfully predict outputs given new and unseen inputs in the future.這句話我拆成三個部分：find a model or procedure、historical data comprised of inputs and outputs以及predict outputs given new and unseen inputs in the future分別來做解析。這三部分用於說明找尋一個模式（model or procedure）、使用過去已知的資料（包含各種因子與結果）以及來找尋未來同樣問題會有什麼樣的結果。為何要用這樣的模式來關注機器學習的「問題」呢？就我個人的經驗是因為目前在許多領域當中，存在著許多痛點，尤其是應用領域當中由於現實環境多重因素的影響，會有許多不同的結果發生。舉個例來說，工廠生產產品大致可分為入料、生產到出貨三個流程，幾乎所有工廠都是以這樣的模式製造出我們所需要的東西。當然這也很符合所謂的input→process→output直線性流程，但這其中卻也包含了許許多多的問題點。以入料來說，「上游廠商提供的料件是否充足」就是一個很關鍵的問題，例如近期因為Covid19所導致的全球晶片不足，幾乎使得各種電子下游產業出貨受影響，以汽車產業而言，在2021年幾乎減產超過700萬輛；而另一個問題像是「入料的品質」也是關鍵，記得電影《食神》有一句很關鍵的話叫做：「這批牛肉好便宜的」，就成為一個轉折點，導致主角在前期的衰敗命運。當然工廠的來料在管控上多了一些無法掌握的客觀因素，但如果是到了廠內呢？接下來的「生產」可以幾乎由工廠自己掌握了，從流水線的設計、設備機台的擺放動線、機台的參數調整、產品製造的排程、料件倉儲的管控，乃至於到溫度濕度的監控、工安的監控等等，有成千上百個因素會導致各種問題的產生。即便是已經將各種生產流程「標準化」，仍會有許多週期性的因素、人員操作的因素或人為決策的因素造成，像是同樣的生產機台，在汰舊換新時可能會因為設備商報價的不同或是服務態度的不同而會有更換廠商的情況發生，又或者是一開始就有多設備商機台的同時存在，這也導致了人員操作上不管是參數調整或生產排程都會有許許多多的問題。但回過頭來，有些事我們能通過簡單的方法論去解決，但仍有許多的冰山下的問題點，才是真正導致我們的「痛點」存在，我雖然不是待過所有的工廠，但我相信有許多的成長或衰退都是由這些很小的問題造成鏈鎖反應所導致的，一般來說過去的解決方法都是以製程、設備或其他相關部門一同開會針對問題點進行複盤與討論，但是尤其比較傳統的工廠，多半不是以癥結點找出問題進行解決，而是討論有什麼方法可以使這件事不要再發生，而這些方法往往都不是解決根因的方法，只是一種治標不治本的方法，但我完全可以理解，因為以過去的方法論基本上是無法找出原因的，因為原因已經被各種鏈鎖反應給蓋掉了。那麼，機器學習的問題在這上面就相當的重要了，雖然我前面是舉工廠的例子來說明，但我相信同樣的痛點邏輯應該也是會在其他產業上發生，如果能夠將過去各種的因子的資料收集起來，然後利用一種模式來進行推演出後續可能會有什麼樣的結果，進而協助我們進行決策，我想「問題點」是初學者在學習機器學習時所要第一個接觸的面向。而這個面向就是所謂的監督式學習的預測分析問題，在此先拋開其他非監督式學習的問題，以及其他不是預測分析的問題。主要是監督式學習與預測分析的問題最能夠直接打中我們當前許多產業面臨到的痛點，這是很直觀的，所以對於初學者來說，不僅可以最容易得到資料，在機器學習的應用上也能最快的上手，這也很符合Top-Down思維的學習方式。機器學習的「解決方式」機器學習的解決方法可描述成以下：  A model or procedure that automatically creates the most likely approximation of the unknown underlying relationship between inputs and associated outputs in the historical data.這個描述我認為有兩個重點，先說unknown underlying relationship between inputs and associated output，這個主要就是談到要找出在冰山下各因子與痛點的關聯性，當然這邊我用「各」因子這個詞並不完全準確，因為並不是所有因子都與痛點有關，且相關程度不一，但就關聯性這件事這邊先不談。第二個重點是a model or procedure that automatically creates，這當中最重要的是automatically，意思是要用自動化的方式來生成一個模式（模型）來幫助我們去判斷以及找出冰山下各因子之間與痛點的關聯性。以下我會專門以第二點來說明我的一些想法。我記得我以前曾經待過一家公司的業務是專門替手動測試腳本進行程式自動化的工作，在這份工作中我學到相當多的東西，也給我帶來原本我意想不到的一些想法與收穫。在這份工作當中，我意識到「自動化」這件事情有多麽的重要，而自動化中有一個概念也是我直到目前的工作仍然常常會聽到的，那就是「模組化」，自動化本身的概念並不難，難的是要完成它且要保持後續不要造成維護上面很大的問題，模組化是必不可免的東西。模組化又叫模塊化，模組化設計英文叫做Modular design，根據維基百科上說是「將功能切分為抽象的、可擴充的、可重複使用的模組」以及「可以獨立的於不同的系統中被建立與使用」。簡單來說就像樂高一樣，樂高公司設計出許多很多樣的基礎單元，可以讓愛好者可以拼出自己想要的模型。By the way，談到樂高，雖然我不是樂高愛好者，不過只要每次去信義遠百都一定會特別繞去樂高專區看看，我很喜歡樂高所拼出來的現實場景。不過模組化更像是將基本單元給設計出單一功能，並可以讓其他人複製後重複使用的概念。也跟Coding一樣，每次設計出的function是需要放在library給其他人調用的，所以在設計時就非常需要考量通用性。在思考機器學習的「解決方式」時，要想像我們是設計一個黑盒子，這個黑盒子是需要被設計出來成一種自動化且帶有可解決冰山下各種因子之間的關係的，我們只要拋進去資料給這個黑盒子，它會直接演算出我們想知道的因子間的關係，並給出我們要的答案（稱之為output或是y），這時候我們就可以依據這個答案來進行對策或優化。這邊也體現出機器學習的價值，因為黑盒子裡面的內容與處理方式是人為製造不出來的，先不說它處理的是繁雜或看不見的因子的影響，就拿計算這件事來說，或許要做一件很小的計算，人為計算所需耗費的時間可能是這個黑盒子處理的時間稱得上指數成長的。小結：初學者學習機器學習的兩個方向所以這邊做個小結，初學者學習機器學習要使用Top-Down的思維，並從「問題」與「解決方案」這兩個方向下手。      思考問題需包含三個邏輯：監督式學習的資料、可以做預測分析的問題，以及圍繞著現實中的各種痛點出發。    思考解決方案需包含兩個思維：答案須從冰山下各種複雜的因子間與痛點的關係中找到，但這個是我們人為做不到的；需建立一個黑盒子（系統或模式）使得它能自動化的替我們操作。  "
  },
  
  {
    "title": "使用Top-Down思維學習機器學習",
    "url": "/posts/learn-ml-topdown-method/",
    "categories": "DATA_SCIENCE",
    "tags": "machine_learning",
    "date": "2022-04-04 22:18:00 +0800",
    





    "snippet": "  為什麼在學習Machine Learning的路上會這麼辛苦？覺得有很多浩瀚無垠的知識需要學習，微積分、線性代數、統計學⋯⋯，但或許是我們用錯方法進行學習。本篇我以“Why Machine Learning Does Not Have to Be So Hard”這篇文章進行閱讀、學習與思考如何用正確且有效率的方式來學習Machine Learning。前言「自我限制的信念」幾乎長久以來都存在我的生活中，像是工作加薪、感情生活，乃至於休閒活動，當然也包括在學習資料科學這條路上。會讓我意識到這件事的原因是我發現一路學習以來，我不管上多少課、看多少文章，都總會有種力不從心的感覺，總是無法在日常工作中隨心運用。當進度緩慢甚至停滯時，我想是時候來反思一下問題點到底在哪？除了我因為日常資料分析、可視化畫面製作等常態工作所導致的「無聊」以外，在實際上想進一步利用機器學習進行分析時總會面臨許多問題，當我自認為是自己學習的知識面還不夠多時，我總會在仍有長長的學習路徑地圖前面感到十分潰敗。「或許不該是這樣子學習！」我們習以為常的Bottom-Up學習方式從小學開始，一路上的學習旅程當中，幾乎大部分學科總是從基礎開始學起，像是英文總是從單詞開始「背」起，然後進一步的句子、文法⋯⋯。而我也在工作之後總是以這樣的心態來學習各種我想學的事物，但⋯⋯結果如何？結果就是我大部分想學的都失敗了，不是半途而廢，不然就是學了用不上，到目前為止機器學習就有這種味道，只是我平常還略有接觸，所以才沒消失在我的生活中。但“Why Machine Learning Does Not Have to Be So Hard”這篇文章卻說機器學習的學習不該是這樣子做的，因為這樣子做不僅沒有效率，而且頗為無趣，基本上會加速消磨原本的學習熱情。而這種從基礎開始一步一步學起的方式就叫做Bottom-Up的思維，更具體的來說，Bottom-Up的概念是以一種Logical way（邏輯性的方式）將各種基礎一層一層的堆疊上去，它的概念多用於沒有前面的基礎是無法理解與學會後面的知識的學科，像是數學、化學等等。但機器學習不一樣，它不是數學，即使它包含了數學。它核心的思想中是一種「解決問題」的專業，它也是一門綜合性的專業，更是一門藝術。為何不該使用Bottom-Up思維來學習機器學習正如前面提到的，機器學習是一門「解決問題」的專業，它更需要的是熱情、動力，而且它包含了很多個專業學科，如果我們需要通過Bottom-Up的思維來學習的話，我們就必須把它包含的種種專業給學起來，試想一下，我們或許得要學習數學系＋統計學系＋電腦科學等等的專業，拜託！這裡面每一門學科都是大學裡至少需要花上4年學習的知識，怎麼可能都學起來。各何況即使所有知識都學起來，到達真正的「應用」又是另外一回事。對於我這種出社會才接觸機器學習的「半路出家」的人來說一點都不現實。要像學開車一樣的學習機器學習我有駕照，雖然我不太會開車，但我近期因為有考慮是不是要買一台車而嘗試去練習，基本上我練習開車應該不會跟其他人差太多，我就是坐上駕駛座，先熟悉一下車裡的配置，方向盤、排檔桿、煞車與油門、方向燈、雨刷等等，然後插上鑰匙發動，接著握好方向盤看向左中右三個後視鏡確認方位，接著就是開了，沒錯，就是「直接開了」，雖然一開始會顯得很陌生，但這樣練習大概兩個禮拜之後，基本上就有一定的熟練度了。開車練習的是「身體記憶」，記得曾經在一本書看過，一個開了兩年車的人，開車技術不會比一個開了二十年的老司機來的差，甚至還會因為身體素質比較好、視力比較清晰，技術表現得更佳。我們學習開車不可能像學習數學一樣，要把所有基礎都學會，我們不可能學習汽車的各種零組件、汽車的歷史與影響、方向盤的轉動角度與輪胎角度的關係⋯⋯，因為學習這些沒用，這些沒辦法讓我們學會開車。而我們所有人學習開車的就是Top-Down的學習思維，只需要知道很基礎的東西，然後就直接去做了（Just Do it!)，因為這樣的學習主要來自於不斷行動的反饋，開車一開始會無法一次的切入路邊停車、一開始會無法很順的踩油門啟動、一開始會因為碰到「馬路三寶」而受到驚慌⋯⋯，但就在一次又一次的經驗累積當中，逐漸形成了一種「下意識的行動」，所有行為都是下意識的，基本上在我們意識到的時候，我們已經成功避開一場可能的意外。Top-Down思維的學習在Top-Down思維進行學習會有幾種情況：  它是「迭代的」也就是我前面說到的「不斷行動的反饋」，很多時候需要許多次的迭代才能深刻的學習到一件事。  它是「不完美的」很多時候在一開始都是表現很糟的，需要通過不斷的反饋才能進步。  它是「需要開放心胸與不斷探索的」在學習機器學習的過程是需要放開心胸，讓我們接觸到許多事情，甚至探索許多不一樣的事情，畢竟需要Top-Down思維的領域都是很多元的，我們很需要好奇心來探索一切。  它是「有趣的」因為我們在學習的是使用這件事的「本質」，開車就是學會「開車」，說英文就是學會「說英文」，學習機器學習自然就是「使用機器學習來解決問題」，所以它如果本質是有趣的，那們我們學習它的本質自然也會感到有趣。直接去學習吧！在“Why Machine Learning Does Not Have to Be So Hard”中也提到利用Top-Down來學習可以讓我們更快速、更有效率，且更有趣，或許可以讓我擺脫「無聊」或「無法具體的應用」的困境，那麼就直接去學習吧！"
  },
  
  {
    "title": "機器學習如何入門？",
    "url": "/posts/why-ml-is-hard-to-do/",
    "categories": "DATA_SCIENCE",
    "tags": "machine_learning",
    "date": "2022-03-03 22:18:00 +0800",
    





    "snippet": "  許多時候在資料科學的領域會碰到機器學習(Machine Learning)的專業，但機器學習如何入門呢？或許從心態上的自我檢視可以幫助自己快速行動⋯⋯為何我覺得難以實際運用機器學習？在接觸資料科學也有一段時間了，其實從一開始我就是往機器學習的方向前進，但後來在工作了幾年後，多半還是在數據與統計的層面進行，但在機器學習的實用與學習方面似乎有點停滯不前，除了只有在簡單的幾的模型上面玩來玩去以外，最重要的是障礙多在很難用於實際應用上面。事實上網路上一些簡單的資料集用起來總是可以訓練出不錯的模型，但在實際工作場合上的數據集，除了資料取得不易以外，資料與實際行為的不匹配或邏輯錯誤的數據往往佔據我非常大的心力，加上很多時候沒有很具體的問題點是需要通過機器學習來應用，使用上面就顯得較少。但上述的原因其實多在我對於機器學習的認知上還是一知半解，當我無法真正的產生好奇心去探求「問題點」時，許多表面的問題其實根本只需要用到很簡單的敘述統計就可完成。但這也促使我開始思考，是否需要從對於問題的認知上面去求得更進一步的層面呢？試想一下，許多的公式多以理想狀態(也就是許多條件都固定的情況下)來進行推導與使用，就算是假設檢定也是通過樣本(我們人可計算的範圍內)來推得母體的情況。但在這些比較「表面」的問題點被解決之後呢？當現實中各種因素影響的情況下呢？想要求得更精準、更深層的問題解答，或許才是需要通過機器學習來使用吧！所以我決定較為「系統」的來學習機器學習，這邊的系統性學習並非從很基礎開始，而是我想通過能夠了解這一門學問來解答我的疑問：機器學習為何要存在？它為何有用？它該怎麼在實際層面上使用？系統性的學習學習的方式與教材對於每個人來說是有很大不同的，有的方式適合我，有的會讓我造成反效果。於是我憑著想找一個能夠讓我真正的理解這門學問的信念，去找相關的文章或課程，還真的被我找到了。事實上坊間很多的入門課程或書籍，但多半對我來說過於「學科」化，我並非想要了解知識點，而是我想了解真正理解這門學問的人的「內心話」。於是我找到了一個Blog叫「Machine Learning Mastery」，這主要是完整介紹所有跟機器學習有關的文章，重點是內容多以比較白話但又不零碎的方式來敘述重點，對於我想要使用長期主義者學習機器學習的方式來說是相當適合的。摒除自我限制的信念Machine Learning Mastery有這麼一篇文章，很具體的說明了許多時候我們無法真正的踏入機器學習的領域，除了我上面說到的問題點外，許多時候都是自我產生了疑問與抗拒，而永遠無法真正的進入。事實上以我而言，雖然我踏入了資料科學有一段時間，但我總覺得機器學習還是有點高大上，不是很親民的一門專業，尤其當我困在無法在實務上很好的運用所造成的迷惘中，更是與機器學習產生了一種無法言喻的隔閡。這也使我產生了自我限制的信念，而無法花時間去進一步學習與成長。還有一點也是文章中提到的，我總是認為我需要學好線性代數、統計與機率才能夠前進，但是如果真的要學到很專業，不僅永遠無法踏入機器學習的領域，更無法直面的使用它。但文章中也說明入門最重要的是去「運用」它，機器學習從很巨觀的方面來看，不過就是利用大數據來讓機器學習出一種模式幫助我們解決問題，如果拿最簡單、最乾淨的資料集來使用，跑個模型根本很快。真正的進入只要從最簡單的模型訓練開始就好，先讓自己產生了「我已經開始使用機器學習」的信念，等於自己已經進入了這個領域。舉個我印象深刻的例子，我第一次學程式的時候，老師只是教我們打「Hello World」之後，就恭喜我們已經會寫程式了。想到這裡我突然恍然大悟，沒錯啊！這個領域就像寫程式一樣，沒有什麼叫做完美的，只要達到我們的目標就算完成。回過頭來說一下我如何具體的摒除掉在入門機器學習所產生的自我限制信念，這也是我這幾個星期以來一直思考與嘗試的方式，可以提供當作參考。我主要有3個步驟：      我先讓自己去回想(或當下身歷情境的去想)我過去曾經在想要學習機器學習時內心所產生的各種藉口，包括前面提到的「我要先學好線性代數與統計才能再下一步」與「實際數據集很難應用機器學習」外，我還出現了一些蠻有趣的念頭，像是「我要先有很大量時間來完成線上課程」、「我要有很好的GPU可以來幫助我訓練模型」、「我要把程式底子再加強」、「我需要學好演算法或資料結構」甚至也有出現「或許我該去讀在職專班取得學位」。        把上述的理由寫下來，然後一個一個的去挑戰自己。我主要是找一個陽光明媚的早晨去做這一件事。        一件一件的挑戰自己當初的想法，然後寫下其實可以不必這樣做的原因。  這對我來說蠻有幫助的，因為我突然覺得好像沒有任何理由去阻擋我去學習，於是我拿起了過去曾經買過的機器學習書籍(隨便一本)，然後開始翻閱、閱讀，以及實現書中的代碼。我現在就在做這件事，我的目的不是要把書中所有知識點都弄透徹，而是抱持著我想通過閱讀完整本書來理解「機器學習這件事」，這樣也可以讓我丟掉過去的任何疑慮與藉口，就算只是一小步，也能讓我去接觸它、使用它。"
  }
  
]

